<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx    
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc.xsd ">
    <!-- 最重要:::如果放在spring-context.xml中，这里的aop设置将不会生效 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 默认的注解映射的支持 -->
<!--开启注解 -->  
	<mvc:annotation-driven />
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
<context:component-scan base-package="TestPack"
		>
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
    <mvc:interceptors>  
    <!-- 国际化操作拦截器 如果采用基于（请求/Session/Cookie）则必需配置 --> 
<!--    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  -->
    <!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
    <bean class="Infrastructure.Interceptors.AuthInterceptor"></bean>
<!--     <mvc:interceptor>  
        <mvc:mapping path="/test/number.do"/>  
         定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的   
        <bean class="InterceptorTest.SpringMvcInteTest"/>  
    </mvc:interceptor>  -->
</mvc:interceptors>

    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
<!--AOP 配置-->
<!-- 激活组件扫描功能,在包cn.ysh.studio.spring.aop及其子包下面自动扫描通过注解配置的组件 -->
	<context:component-scan base-package="Infrastructure.Aspect"/>
	<context:component-scan base-package="Services"/>
   <!--
    Most controllers will use the ControllerClassNameHandlerMapping above, but
    for the index controller we are using ParameterizableViewController, so we must
    define an explicit mapping for it.
    -->
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="index.htm">indexController</prop>
            </props>
        </property>
    </bean>
	<!-- 视图解析器 -->
  <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:contentType="text/html" 
          p:prefix="/WEB-INF/Views/"
          p:suffix=".jsp" />
<!--           <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp" />
        <property name="suffix" value=".jsp" />
    </bean>-->

    <!--
    The index controller.
    -->
    <bean name="indexController"
          class="org.springframework.web.servlet.mvc.ParameterizableViewController"
          p:viewName="index" />

    	<!-- 开启controller注解支持 -->
    <!-- use-default-filters="false" 只扫描指定的注解 -->
<!--    <context:component-scan base-package="TestPack" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>-->
<!-- 支持上传文件 -->
<!--	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 设置上传文件的最大尺寸为1MB 
		 <property name="maxUploadSize"> <value>1048576不限制上传文件大小</value> </property> 
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>-->
</beans>
